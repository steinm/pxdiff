<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@

    
	The docbook-to-man binary is found in the docbook-to-man package.
	Please remember that if you create the nroff version in one of the
	debian/rules file targets (such as build), you will need to include
	docbook-to-man in your Build-Depends control field.

  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>Uwe</firstname>">
  <!ENTITY dhsurname   "<surname>Steinmann</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>April 29, 2003</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>uwe@steinmann.cx</email>">
  <!ENTITY dhusername  "Uwe Steinmann">
  <!ENTITY dhucpackage "<refentrytitle>PXDIFF</refentrytitle>">
  <!ENTITY dhpackage   "pxdiff">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2003</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose>Reads two Paradox database files and calculates the difference</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>

      <arg><option>-h | --help <replaceable></replaceable></option></arg>
      <arg><option>--version <replaceable></replaceable></option></arg>

      <arg><option>-d | --data <replaceable></replaceable></option></arg>
      <arg><option>-t | --schema <replaceable></replaceable></option></arg>
      <arg><option>-s | --sort <replaceable></replaceable></option></arg>
      <arg><option>-v | --verbose <replaceable></replaceable></option></arg>
      <arg><option>--mode=MODE <replaceable></replaceable></option></arg>
      <arg><option>--output-mode=MODE <replaceable></replaceable></option></arg>
      <arg><option>-o FILE | --output-file=FILE <replaceable></replaceable></option></arg>
      <arg><option>-k key | --primary-key=KEY <replaceable></replaceable></option></arg>
      <arg><option>-r ENCODING | --recode=ENCODING <replaceable></replaceable></option></arg>
      <arg><option>--fields=REGEX <replaceable></replaceable></option></arg>
      <arg><option>--compare-common <replaceable></replaceable></option></arg>
      <arg><option>--disregard-codepage <replaceable></replaceable></option></arg>
      <arg>FILE1 FILE2</arg>
			<arg>PRI-INDEX1 PRI-INDEX2</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>This manual page documents the
      <command>&dhpackage;</command> command.</para>

    <para>&dhpackage; reads two Paradox database files and calculates the
		  difference. It can both find differences in the table structure
			and the data records. Records are always compared as a whole and
			if they differ, the fields will be compared too. Records must be
			of the same length to be comparable.
      </para>
		<para>Paradox database records are read as they are stored in the
		  file. This could imply differences which result from a different
			order of the records, though the databases are identical. In such a case
			you will have to use a primary index for both files and make sure
			both databases are sorted equally or use the option --sort to sort
			the databases before comparison. For more information check the
			section on 'How differences are found'.</para>
		<para>A similar problem occurs when the two databases has the same fields
		  but in different order. Such a case cannot be handled reasonably. It
			would require to rearrange fields which is not possible currently.</para>
		<para>&dhpackage; may also be confused by different code pages. If
		  character fields contain identical characters but with different
			encoding, then this will be interpreted as different field values.
			Recoding of field data is currently not supported because it results
			into a huge speed penalty.</para>
  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <para>The program follows the usual &gnu; command line syntax,
      with long options starting with two dashes (`-').  A summary of
      options is included below.</para>

    <variablelist>
      <varlistentry>
        <term><option>-h</option>
          <option>--help</option>
        </term>
        <listitem>
          <para>Show summary of options.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--version</option>
        </term>
        <listitem>
          <para>Show version of program.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-o</option>
          <option>--output-file</option>
        </term>
        <listitem>
          <para>All output except for usage information and error messages
					 will be written to the given file instead of stdout.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-t</option>
          <option>--schema</option>
        </term>
        <listitem>
          <para>Compare schemas and output the differences. Schema comparison
					  will also take place if you only pass --data, but schema differences
						will not be displayed.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-d</option>
          <option>--data</option>
        </term>
        <listitem>
          <para>Compare records and output the differences. Comparing data also
					  implies to compare the schema first. If the schemas do not match
						the data comparison will be not be executed. If you would like
						to compare two databases which have some fields in common but have
						an overall different schema, you can specify the option --fields
						to select just the fields in common.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-s</option>
          <option>--sort</option>
        </term>
        <listitem>
          <para>Sort both input files before calculating the difference. This
					  option is useful if you would like to compare two database files
						which have many records in common but not in the same order.
						If a primary index field is given, it will be the only field used
						for sorting.
						</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-v</option>
          <option>--verbose</option>
        </term>
        <listitem>
          <para>Output some more information. Currently this has no effect.
					  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--mode=MODE</option>
        </term>
        <listitem>
          <para>Sets the comparision mode. This option provides a different way
					 to set what is to be compared. --mode=data is equivalent
					 to --data, and --mode=schema to --schema.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--output-mode=MODE</option>
        </term>
        <listitem>
          <para>Not yet implemented.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-o FILE</option>
          <option>--output=FILE</option>
        </term>
        <listitem>
          <para>Write differences into given file instead of stdout.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-r ENCODING</option>
          <option>--recode=ENCODING</option>
        </term>
        <listitem>
          <para>Recode all fields of type alpha to the given encoding. You will
					 have to specify the encoding similar to the
					 <application>recode</application> command, by passing only the part
					 on the right hand side of the `..' of what you usually pass to
					 recode. This option will only influence the output and not the
					 comparison itself.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--fields=REGEX</option>
        </term>
        <listitem>
          <para>This option allows to select certain fields by specifying
					 an extended regular expression.
					 "field1|field23$" will select all fields whose name
					 contains "field1" or end in "field23". If this option is not used
					 all fields will be compared. The field name is case insensitive.
					 The option is very useful if you would like to compare two database which
					 have different schemas but some fields in common or to restricted the
					 comparison on some fields to isolate certain differences.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--compare-common</option>
        </term>
        <listitem>
          <para>Compare only those fields which are common to both databases.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--disregard-codepage</option>
        </term>
        <listitem>
          <para>Usually a different code page will disable the comparision of
					  records because it is considered a difference in the schema. This
						behaviour is usefull if field data differs because of a different
						code page. In case of databases without any character fields it is
						save to compare the records even if the code page differs. This
						option makes sure that different code pages will not be treated as
						different schemas. Use it with care!</para>
        </listitem>
      </varlistentry>
    </variablelist>

		<para>The none optional parameters FILE1 and FILE2 are Paradox database
	 	 files which shall be compared. The optional parameters PRI-INDEX1 and
		 PRI-INDEX2 are the primary index files for the databases. The output
		 of &dhpackage; will list all changes which are neccesary to transform
		 the first data base into the second database.</para>
  </refsect1>
  <refsect1>
    <title>HOW DIFFERENCES ARE FOUND</title>

		<para>&dhpackage; ist somehow similar to the diff(1) program. It uses
		  the same algorithmn and has as similar output. Anyway, since comparing
			databases and text files is somewhat different, &dhpackage; takes a more
			sophisticated approach to find differences, though the algorithmn is
			much less optimized and needs more memory then an optimzed version
			would use.</para>
		<para>First of all, databases have a structure and records. Both must be
		  compared. If the structure does not match it makes no sense to compare
			the records unless the comparision is restricted to some fields common
			to both databases. Secondly, databases should be considered equal, if both
			databases contain the same records, disregarding its location in the
			file. Third,
			different records can be interpreted in two ways. They differ because
			they have nothing in common and just happen do be at the same position
			or they differ in some fields but are basically the same record which
			has been updated. In the second case there is likely to be a primary
			key to match the two records.</para>
		<para>&dhpackage; tries to be as smart as possible, but it will not be
		  succesful without some help. If you compare two databases make sure
			to sort them by the same field, preferably by a unique field or the
			primary key. Usually one will have to pass the primary index files
			for both database or use the option --sort to sort both database before
			calculating the difference. Sorted databases can easily be synchronised,
			even if many
			records has been deleted or added.</para>
		<para>If there is a primary key, then
			specify its name with the --primary-key option. A primary key can be
			used to tell if a record has been updated or if it is new or deleted.
			In the output the two records will be marked with '&lt;' and '&gt;'
			instead of '+' and '-'. A '&lt;' means that this record in the first
			database will be replaced by the record in the next line, which has
			a leading '&gt;'.
			</para>
		<para>Sometimes, one is not interessted in comparing a complete record but
		  only some selected fields; especially if databases have different
			structure and comparing whole records is not possible.
			The option --fields can be used to pass a regular expression
			to match the field names which shall be compared. Anyway, this may
			fail if the selected fields
			are not in the same order. There is currently no way to reorder the
			fields, all you can do is to compare field sets which are in the same
			sequence in both databases.</para>
		<para>If --primary-key and --fields is used at the same time, then the
		  primary key must be in the specified field set.</para>
		<para>If you would like to compare all fields which are common in both
		  databases, you can use the option --compare-common instead of passing
			all fields with the --fields option.</para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>pxview(1)</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &lt;&dhemail;&gt;.
      Permission is
      granted to copy, distribute and/or modify this document under
      the terms of the &gnu; Free Documentation
      License, Version 1.1 or any later version published by the Free
      Software Foundation; with no Invariant Sections, no Front-Cover
      Texts and no Back-Cover Texts.</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


